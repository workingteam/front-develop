//______________________________________
//                               TEXTBOX
.material-textbox{
	position: relative;
	display: inline-block;
	transition: all .1s ease;
  &:before {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 0;
    border-top: 2px solid #000;
    transition: inherit;
  }
  &.error {
    &:before {
      width: 100%;
      border-color: $color-red;
    }
  }
  label {
    position: absolute;
    left: 10px;
    opacity: .4;
    pointer-events: none;
    transition: inherit;
    transform: translateY(0);
  }
  textarea ~ label { top: 10px; }
  input ~ label { bottom: 10px; }
  input, textarea {
    appearance: none;
    display: block;
    width: 100%;
    min-width: 150px;
    border: none;
    border-radius: 0;
    border-bottom: 1px solid #ccc;
    border-bottom-color: rgba(0,0,0,.2);
    background-color: transparent;
    box-shadow: none;
    transition: inherit;
    &:focus, &:valid {
      border-bottom-color: #333;
      border-bottom-color: rgba(0,0,0,.7);
      ~ label {
        transform: translateY(-200%);
        font-size: .8em;
        opacity: 1;
      }
    }
  }
}

//______________________________________
//                                 TABLE
.material-table {
  width: 100%;
  line-height: 1.3;
  text-align: left;
  br { display: none; }
  caption {
    width: 100%;
    font-weight: 400;
    font-size: 1.3em;
    padding: 10px;
  }
  thead {
    border-bottom: 2px solid #999;
    border-bottom-color: rgba(0,0,0,.2);
    th, td { font-weight: bold; }
  }
  tbody {
    tr {
      &:nth-child(2n+2) { background-color: rgba(0,0,0,.04); }
      &:hover { background-color: rgba(0,0,0,.07); }
      &.full {
        width: 100%;
        text-align: center;
      }
    }
  }
  th {
    position: relative;
    padding: 15px;
    word-break: break-all;
    min-height: 48px;
  }
  td {
    @extend th;
    //----- Floating --------------------
    > {
      div, ul {
        display: none;
        position: absolute;
        top: 5%;
        left: 10%;
        width: 100%;
        padding: 6px 10px;
        border-radius: 2px;
        background-color: #111;
        background-color: rgba(0, 0, 0, 0.8);
        color: #fff;
        box-shadow: 0 2px 4px -2px #666;
        box-shadow: 0 2px 4px -2px rgba(0, 0, 0, 0.6);
        z-index: 1;
      }
    }
    ul { list-style: square inside; }
    &:hover > {
      div, ul {
        display: block;
      }
    }
    //----- Button --------------------
    > {
      button, input, select {
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
        background-color: rgba(0, 0, 0, .08);
        font-weight: bold;
        border: 0;
        border-bottom: 2px solid #fff;
      }
      button:hover {
        background-color: #ff6175;
        color: #fff;
      }
    }
    //----- Image --------------------
    > img {
      position: absolute;
      top: 50%;
      height: 80%;
      max-width: 95%;
      left: 50%;
      transform: translate(-50%, -50%);
      -webkit-transform: translate(-50%, -50%);
    }
  }
  &.raised {
    background-color: #fff;
    box-shadow: 0 2px 4px -2px #000;
    box-shadow: 0 2px 6px -2px rgba(0, 0, 0, 0.4);
    &:hover {
      box-shadow: 0 2px 10px -2px #000;
      box-shadow: 0 2px 10px -2px rgba(0, 0, 0, 0.5);
    }
    tr, tbody tr.full {
      border: 1px solid #ccc;
    }
  }
}

$list-screen: to-list($screen);
$length-list-screen: length($list-screen);
@for $i from 1 through $length-list-screen {
  $boolean: $i + 1 <= $length-list-screen;
  $current: nth($list-screen, $i);
  $tag: nth($current, 1);
  $value: if($boolean, nth(nth($list-screen, $i + 1), 2) - 1, nth($current, 2));
  $condition: if($boolean, 'max-width:', 'min-width:');
  @media screen and ('#{$condition}#{$value}') {
    .material-table.#{$tag}-table {
      display: block;
      width: 100%;
      margin: 20px auto;
      cursor: default;
      @include clearfix();
      col { float: none; }
      thead {
        display: block;
        float: left;
        max-width: 40%;
        font-weight: 500;
        border-bottom: 0;
        user-select: none;
        td, th {
          display: block;
          padding: 15px 10px;
          text-align: right;
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
        }
      }
      tbody {
        display: block;
        width: auto;
        overflow-x: auto;
        white-space: nowrap;
        border-left: 2px solid #999;
        tr {
          display: inline-block;
          min-width: 100%;
        }
        td, th {
          display: block;
        }
      }
      img {
        left: 5%;
        transform: translateY(-50%);
      }
      &.raised {
        tr.full { border: 0; }
      }
    }
  }
}


//______________________________________
//                              CHECKBOX
.material-checkbox {
  position: absolute;
  left: -9999px;
  top: -9999px;
  visibility: hidden;
  // SLIDE
  &.slide {
    $checkbox-bg: #ddd;
    & + [for] {
      position: relative;
      padding: 3px 20px;
      background-color: $checkbox-bg;
      font-size: 0;
      color: transparent;
      border-radius: 2px;
      transition: all .2s ease;
      &:before {
        content: "";
        position: absolute;
        top: 50%;
        left: 0;
        transform: translate(-2%, -50%);
        display: block;
        padding: 10px;
        background-color: inherit;
        border-radius: 50%;
        box-shadow: 0 2px 6px -2px rgba(black, .5);
        transition: inherit;
      }
      &:after {
        content: attr(data-off);
        position: absolute;
        top: 50%;
        right: 0;
        font-size: 16px;
        color: #111;
        transform: translate(130%, -50%);
        white-space: nowrap;
        font-weight: 400;
        transition: inherit;
      }
    }
    &:checked + [for] {
      background-color: darken($checkbox-bg, 20%);
      &:before {
        background-color: darken($checkbox-bg, 40%);
	      transform: translate(102%, -50%);
      }
      &:after {
        content: attr(data-on);
      }
    }
  }


  // CHECK
  &.check {
    & + [for] {
      position: relative;
      padding-left: 22px;
      margin-left: 10px;
      transition: all .2s ease;
      &:before {
        content: "";
        position: absolute;
        top: 50%;
        left: 0;
        transform: rotate(0deg) translateY(-50%);
        padding: 6px;
        border: 2px solid #666;
        border-radius: 2px;
        margin-right: 10px;
        opacity: .6;
        backface-visibility: hidden;
        transition: inherit;
      }
    }
    &:checked + [for] {
      opacity: 1;
      &:before {
        opacity: 1;
        padding: 4px 10px;
        border-top-color: transparent;
        border-right-color: transparent;
        transform: rotate(-45deg) translateY(-100%);
      }
    }
  }
}



//______________________________________
//                                 RADIO
.material-radio {
  & + [for] {
    position: relative;
    padding-left: 22px;
    &:before {
      content: "";
      position: absolute;
      top: 50%;
      left: 0;
      transform: translateY(-50%);
      padding: 5px;
      border-radius: 50%;
      background-clip: padding-box;
      border: 4px solid transparent;
      box-shadow: 0 0 0 2px #666;
      opacity: .6;
    }
  }
  &:hover + [for] {
    &:before {
      opacity: 1;
	    box-shadow: 0 0 6px 2px #666;
    }
  }
  &:checked + [for] {
    &:before {
      opacity: 1;
	    background-color: #666;
    }
  }
}